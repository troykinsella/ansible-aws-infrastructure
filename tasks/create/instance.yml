---
- name: ec2 | create instance | {{ system_role }}
  ec2:
    region: "{{ aws_region }}"
    zone: "{{ aws_region }}{{ aws_preferred_availability_zone }}"

    key_name: "{{ aws_key_pair_name | default(omit) }}"

    group_id: "{{ security_group_id['managed'] }},{{ security_group_id[system_role] }}"

    image: "{{ aws_ami_id | mandatory }}"
    instance_type: "{{ instance_type }}"
    exact_count: 1
    count_tag:
      Project:     "{{ aws_project }}"
      Environment: "{{ aws_environment_name }}"
      Role:        "{{ system_role }}"
      Name:        "{{ system_role }}.{{ aws_project }}-{{ aws_environment_name }}"

    volumes:
      - device_name: /dev/sda1
        device_type: gp2
        delete_on_termination: yes
        volume_size: "{{ root_volume_size }}"

    wait: yes

    vpc_subnet_id: "{{ vpc.subnets | selectattr('resource_tags.Role', 'equalto', system_role) | selectattr('az', 'equalto', aws_region + aws_preferred_availability_zone) | join(',', attribute='id') }}"
    assign_public_ip: "{{ assign_public_ip }}"

    instance_tags:
      Project:     "{{ aws_project }}"
      Environment: "{{ aws_environment_name }}"
      Role:        "{{ system_role }}"
      Name:        "{{ system_role }}.{{ aws_project }}-{{ aws_environment_name }}"

  register: ec2

- name: ec2 | add public instance to ansible host group | {{ system_role }}
  add_host:
    hostname: "{{ ec2.tagged_instances[0].public_ip }}"
    groups: "{{ host_group }}"
#  when: "{{ assign_public_ip == 'yes' }}"
